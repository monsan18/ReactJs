{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\monicasan\\\\Documents\\\\ReactJsApp\\\\tech_test_fe_perintis\\\\src\\\\containers\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Login.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport GoogleLogin from 'react-google-login';\nimport { HeaderWrapped } from \"./header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = async googleData => {\n    const res = await fetch(\"/api/v1/auth/google\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        token: googleData.tokenId\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n  };\n\n  const {\n    OAuth2Client\n  } = require('google-auth-library');\n\n  const client = new OAuth2Client(process.env.CLIENT_ID);\n  server.post(\"/api/v1/auth/google\", async (req, res) => {\n    const {\n      token\n    } = req.body;\n    const ticket = await client.verifyIdToken({\n      idToken: token,\n      audience: process.env.CLIENT_ID\n    });\n    const {\n      name,\n      email,\n      picture\n    } = ticket.getPayload();\n    const user = await db.user.upsert({\n      where: {\n        email: email\n      },\n      update: {\n        name,\n        picture\n      },\n      create: {\n        name,\n        email,\n        picture\n      }\n    });\n    req.session.userId = user.id;\n    res.status(201);\n    res.json(user);\n  });\n\n  function validateForm() {\n    return name.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderWrapped, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: '25%',\n        top: '35%',\n        right: '25%',\n        bottom: '25%',\n        transform: 'translate(-15%, -15%, -15%, -15%)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Manual Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            autoFocus: true,\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"lg\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            block: true,\n            size: \"lg\",\n            type: \"submit\",\n            disabled: !validateForm(),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n            buttonText: \"Log in with Google\",\n            onSuccess: handleLogin,\n            onFailure: handleLogin,\n            cookiePolicy: 'single_host_origin'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"Q3D0qnZ9tttG8x/WlHuqXUGjTo0=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/monicasan/Documents/ReactJsApp/tech_test_fe_perintis/src/containers/Login.js"],"names":["React","useState","Form","Button","GoogleLogin","HeaderWrapped","Login","name","setName","password","setPassword","handleLogin","googleData","res","fetch","method","body","JSON","stringify","token","tokenId","headers","data","json","OAuth2Client","require","client","process","env","CLIENT_ID","server","post","req","ticket","verifyIdToken","idToken","audience","email","picture","getPayload","user","db","upsert","where","update","create","session","userId","id","status","validateForm","length","handleSubmit","event","preventDefault","position","left","top","right","bottom","transform","e","target","value","REACT_APP_GOOGLE_CLIENT_ID"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Login.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nimport { HeaderWrapped } from \"./header\";\r\n\r\nexport default function Login() {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleLogin = async googleData => {  const res = await fetch(\"/api/v1/auth/google\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n    token: googleData.tokenId\r\n  }),\r\n  headers: {\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n})  \r\nconst data = await res.json()\r\n\r\n  }\r\n\r\n  const { OAuth2Client } = require('google-auth-library')\r\nconst client = new OAuth2Client(process.env.CLIENT_ID)\r\n\r\nserver.post(\"/api/v1/auth/google\", async (req, res) => {\r\n    const { token }  = req.body\r\n    const ticket = await client.verifyIdToken({\r\n        idToken: token,\r\n        audience: process.env.CLIENT_ID\r\n    });\r\n    const { name, email, picture } = ticket.getPayload();    \r\n    const user = await db.user.upsert({ \r\n        where: { email: email },\r\n        update: { name, picture },\r\n        create: { name, email, picture }\r\n    })\r\n    req.session.userId = user.id\r\n    res.status(201)\r\n    res.json(user)\r\n})\r\n\r\n  function validateForm() {\r\n    return name.length > 0 && password.length > 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <HeaderWrapped>\r\n        <h2>Login</h2></HeaderWrapped>\r\n      <hr/>\r\n      <br/>\r\n      <div  style={{\r\n        position: 'absolute', left: '25%', top: '35%', right: '25%', bottom : '25%',\r\n        transform: 'translate(-15%, -15%, -15%, -15%)'\r\n    }}>\r\n      <h4>Manual Login</h4>\r\n      <br/>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group size=\"lg\" controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          \r\n        </Form.Group>\r\n       <br/>\r\n          <div className=\"d-grid gap-2\">\r\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n          Login\r\n        </Button>\r\n        <br/>\r\n      <GoogleLogin\r\n    clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\r\n    buttonText=\"Log in with Google\"\r\n    onSuccess={handleLogin}\r\n    onFailure={handleLogin}\r\n    cookiePolicy={'single_host_origin'}\r\n/>\r\n        </div>\r\n      </Form>\r\n      \r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n\r\n \r\n}\r\n"]},"metadata":{},"sourceType":"module"}